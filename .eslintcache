[{"/Users/loladolinsky/Desktop/turing/projects/silver-nest/silver-nest/src/index.js":"1","/Users/loladolinsky/Desktop/turing/projects/silver-nest/silver-nest/src/reportWebVitals.js":"2","/Users/loladolinsky/Desktop/turing/projects/silver-nest/silver-nest/src/App/App.js":"3","/Users/loladolinsky/Desktop/turing/projects/silver-nest/silver-nest/src/About/About.js":"4","/Users/loladolinsky/Desktop/turing/projects/silver-nest/silver-nest/src/Thumbnails/Thumbnails.js":"5","/Users/loladolinsky/Desktop/turing/projects/silver-nest/silver-nest/src/FindARoommate/FindARoommate.js":"6","/Users/loladolinsky/Desktop/turing/projects/silver-nest/silver-nest/src/NavBar/NavBar.js":"7","/Users/loladolinsky/Desktop/turing/projects/silver-nest/silver-nest/src/Profile/Profile.js":"8","/Users/loladolinsky/Desktop/turing/projects/silver-nest/silver-nest/src/assets/tileData.js":"9","/Users/loladolinsky/Desktop/turing/projects/silver-nest/silver-nest/src/apiCalls.js":"10","/Users/loladolinsky/Desktop/turing/projects/silver-nest/silver-nest/src/Form/Form.js":"11"},{"size":665,"mtime":1610074888120,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":1609892799734,"results":"14","hashOfConfig":"13"},{"size":845,"mtime":1610493820916,"results":"15","hashOfConfig":"13"},{"size":1928,"mtime":1610495318317,"results":"16","hashOfConfig":"13"},{"size":2235,"mtime":1610480130518,"results":"17","hashOfConfig":"13"},{"size":2448,"mtime":1610480130512,"results":"18","hashOfConfig":"13"},{"size":1373,"mtime":1610480130516,"results":"19","hashOfConfig":"13"},{"size":7018,"mtime":1610500517494,"results":"20","hashOfConfig":"13"},{"size":794,"mtime":1610402183791,"results":"21","hashOfConfig":"13"},{"size":403,"mtime":1610437305901,"results":"22","hashOfConfig":"13"},{"size":1697,"mtime":1610480130513,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"16yu9dx",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"/Users/loladolinsky/Desktop/turing/projects/silver-nest/silver-nest/src/index.js",[],["49","50"],"/Users/loladolinsky/Desktop/turing/projects/silver-nest/silver-nest/src/reportWebVitals.js",[],"/Users/loladolinsky/Desktop/turing/projects/silver-nest/silver-nest/src/App/App.js",[],"/Users/loladolinsky/Desktop/turing/projects/silver-nest/silver-nest/src/About/About.js",[],"/Users/loladolinsky/Desktop/turing/projects/silver-nest/silver-nest/src/Thumbnails/Thumbnails.js",["51"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport IconButton from '@material-ui/core/IconButton';\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\nimport AccountBoxIcon from '@material-ui/icons/AccountBox'\nimport PropTypes from 'prop-types';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden',\n    backgroundColor: theme.palette.background.paper,\n    cursor: 'grab'\n  },\n  gridList: {\n    flexWrap: 'nowrap',\n    transform: 'translateZ(0)',\n  },\n  title: {\n    color: theme.palette.secondary,\n    fontSize: 24,\n  },\n  icon: {\n    color: '#00acc1',\n    backgroundColor: 'white'\n  },\n  titleBar: {\n    background:\n      'linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)',\n  },\n}));\n \nfunction Thumbnails({availableResidents, allResidents, selectResident, semesterAvailable}) {\n  const classes = useStyles();\n \n  const handleClick = (resident) => {\n    selectResident(resident)\n  }\n  return (\n    <div className={classes.root}>\n      <GridList className={classes.gridList} cols={2.5}>\n        {availableResidents.map((resident, index) => (\n          <GridListTile key={index} onClick={() => handleClick(resident)}>\n            <img src={resident.photo} id={resident.id} alt={resident.name} />\n            <GridListTileBar\n              title={resident.name}\n              classes={{\n                root: classes.titleBar,\n                title: classes.title,\n              }}\n              actionIcon={\n                <IconButton aria-label={`star ${resident.name}`} >\n                  <AccountBoxIcon className={classes.icon}/>\n                </IconButton>\n              }\n            />\n          </GridListTile>\n        ))}\n      </GridList>\n    </div>\n  );\n}\n\nThumbnails.propTypes = {\n  availableResidents: PropTypes.array,\n  allResidents: PropTypes.array, \n  selectResident: PropTypes.object,\n  semesterAvailable: PropTypes.string,\n}\n\nexport default Thumbnails;","/Users/loladolinsky/Desktop/turing/projects/silver-nest/silver-nest/src/FindARoommate/FindARoommate.js",["52","53","54","55"],"import React, { useState, useEffect } from 'react';\nimport {getAllResidents, getResidentsBySemester} from '../apiCalls';\nimport Form from '../Form/Form';\nimport Thumbnails from '../Thumbnails/Thumbnails'\nimport ResidentCard from '../Profile/Profile';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport Container from '@material-ui/core/Container';\nimport { HelpOutline } from '@material-ui/icons';\n\nconst useStyles = makeStyles({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  form: {\n    marginTop:-20\n  },\n  text: {\n    color: \"#7c8181\"\n  },\n  box: {\n    paddingTop: 50, \n    paddingBottom: 80\n  }\n});\n\nexport default function FindARoomate() {\n  const classes = useStyles();\n\n  const [semester, setSemester] = useState('');\n  const [allResidents, setAllResidents] = useState([]);\n  const [availableResidents, setAvailableResidents] = useState([]);\n  const [selectedResident, setSelectedResident] = useState(null);\n  const [profile, setProfile] = useState(false);\n\n\n  useEffect(() => {\n  \n  }, [semester, availableResidents])\n\n  // const getResidents = async () => {\n  //   await getAllResidents()\n  //   .then(data => setAllResidents(data))\n  //   .catch(err => console.log(err))\n  // }\n\n  const selectSemester = (selectedSemester) => {\n    setSemester(selectedSemester)\n    getAvailableResidents(selectedSemester)\n  }\n\n  const getAvailableResidents = async (semester) => {\n    await getResidentsBySemester(semester)\n    .then(data => setAvailableResidents(data))\n    .catch(err => console.log(err))\n  }\n  \n  const selectResident = (resident) => {\n    setProfile(true)\n    setSelectedResident(resident)\n  }\n\n  const exitProfileView = (noResident) => {\n    setProfile(false)\n    setSelectedResident(noResident)\n\n  }\n\n  return (\n    <Container className={classes.root}>\n      {!profile?\n      <>\n      <Box className={classes.box}>\n        <h1 className={classes.text}>Select a semester:</h1>\n        <Form className={classes.form} selectSemester={selectSemester} />\n      </Box>\n      \n        <Thumbnails\n          availableResidents={availableResidents}\n          // allResidents={allResidents}\n          selectResident={selectResident}\n          semesterAvailable={semester}\n        />\n        </>\n      :\n        <ResidentCard \n          resident={selectedResident} \n          exitProfileView={exitProfileView} />\n      }\n    </Container>\n  );\n}","/Users/loladolinsky/Desktop/turing/projects/silver-nest/silver-nest/src/NavBar/NavBar.js",[],"/Users/loladolinsky/Desktop/turing/projects/silver-nest/silver-nest/src/Profile/Profile.js",["56","57"],"/Users/loladolinsky/Desktop/turing/projects/silver-nest/silver-nest/src/assets/tileData.js",[],"/Users/loladolinsky/Desktop/turing/projects/silver-nest/silver-nest/src/apiCalls.js",[],"/Users/loladolinsky/Desktop/turing/projects/silver-nest/silver-nest/src/Form/Form.js",[],{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":7,"column":8,"nodeType":"64","messageId":"65","endLine":7,"endColumn":22},{"ruleId":"62","severity":1,"message":"66","line":2,"column":9,"nodeType":"64","messageId":"65","endLine":2,"endColumn":24},{"ruleId":"62","severity":1,"message":"67","line":9,"column":10,"nodeType":"64","messageId":"65","endLine":9,"endColumn":21},{"ruleId":"62","severity":1,"message":"68","line":33,"column":10,"nodeType":"64","messageId":"65","endLine":33,"endColumn":22},{"ruleId":"62","severity":1,"message":"69","line":33,"column":24,"nodeType":"64","messageId":"65","endLine":33,"endColumn":39},{"ruleId":"62","severity":1,"message":"70","line":56,"column":10,"nodeType":"64","messageId":"65","endLine":56,"endColumn":17},{"ruleId":"62","severity":1,"message":"71","line":76,"column":9,"nodeType":"64","messageId":"65","endLine":76,"endColumn":26},"no-native-reassign",["72"],"no-negated-in-lhs",["73"],"no-unused-vars","'StarBorderIcon' is defined but never used.","Identifier","unusedVar","'getAllResidents' is defined but never used.","'HelpOutline' is defined but never used.","'allResidents' is assigned a value but never used.","'setAllResidents' is assigned a value but never used.","'applied' is assigned a value but never used.","'handleApplyChange' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]