[{"/Users/loladolinsky/Desktop/turing/projects/silver-nest/silver-nest/src/index.js":"1","/Users/loladolinsky/Desktop/turing/projects/silver-nest/silver-nest/src/reportWebVitals.js":"2","/Users/loladolinsky/Desktop/turing/projects/silver-nest/silver-nest/src/App/App.js":"3","/Users/loladolinsky/Desktop/turing/projects/silver-nest/silver-nest/src/About/About.js":"4","/Users/loladolinsky/Desktop/turing/projects/silver-nest/silver-nest/src/Thumbnails/Thumbnails.js":"5","/Users/loladolinsky/Desktop/turing/projects/silver-nest/silver-nest/src/FindARoommate/FindARoommate.js":"6","/Users/loladolinsky/Desktop/turing/projects/silver-nest/silver-nest/src/NavBar/NavBar.js":"7","/Users/loladolinsky/Desktop/turing/projects/silver-nest/silver-nest/src/Profile/Profile.js":"8","/Users/loladolinsky/Desktop/turing/projects/silver-nest/silver-nest/src/assets/tileData.js":"9","/Users/loladolinsky/Desktop/turing/projects/silver-nest/silver-nest/src/apiCalls.js":"10","/Users/loladolinsky/Desktop/turing/projects/silver-nest/silver-nest/src/Form/Form.js":"11"},{"size":665,"mtime":1610074888120,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":1609892799734,"results":"14","hashOfConfig":"13"},{"size":845,"mtime":1610493820916,"results":"15","hashOfConfig":"13"},{"size":2051,"mtime":1610480130511,"results":"16","hashOfConfig":"13"},{"size":2235,"mtime":1610480130518,"results":"17","hashOfConfig":"13"},{"size":2448,"mtime":1610480130512,"results":"18","hashOfConfig":"13"},{"size":1373,"mtime":1610480130516,"results":"19","hashOfConfig":"13"},{"size":5568,"mtime":1610480130517,"results":"20","hashOfConfig":"13"},{"size":794,"mtime":1610402183791,"results":"21","hashOfConfig":"13"},{"size":403,"mtime":1610437305901,"results":"22","hashOfConfig":"13"},{"size":1697,"mtime":1610480130513,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"16yu9dx",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"/Users/loladolinsky/Desktop/turing/projects/silver-nest/silver-nest/src/index.js",[],["50","51"],"/Users/loladolinsky/Desktop/turing/projects/silver-nest/silver-nest/src/reportWebVitals.js",[],"/Users/loladolinsky/Desktop/turing/projects/silver-nest/silver-nest/src/App/App.js",[],"/Users/loladolinsky/Desktop/turing/projects/silver-nest/silver-nest/src/About/About.js",[],"/Users/loladolinsky/Desktop/turing/projects/silver-nest/silver-nest/src/Thumbnails/Thumbnails.js",["52"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport IconButton from '@material-ui/core/IconButton';\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\nimport AccountBoxIcon from '@material-ui/icons/AccountBox'\nimport PropTypes from 'prop-types';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden',\n    backgroundColor: theme.palette.background.paper,\n    cursor: 'grab'\n  },\n  gridList: {\n    flexWrap: 'nowrap',\n    transform: 'translateZ(0)',\n  },\n  title: {\n    color: theme.palette.secondary,\n    fontSize: 24,\n  },\n  icon: {\n    color: '#00acc1',\n    backgroundColor: 'white'\n  },\n  titleBar: {\n    background:\n      'linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)',\n  },\n}));\n \nfunction Thumbnails({availableResidents, allResidents, selectResident, semesterAvailable}) {\n  const classes = useStyles();\n \n  const handleClick = (resident) => {\n    selectResident(resident)\n  }\n  return (\n    <div className={classes.root}>\n      <GridList className={classes.gridList} cols={2.5}>\n        {availableResidents.map((resident, index) => (\n          <GridListTile key={index} onClick={() => handleClick(resident)}>\n            <img src={resident.photo} id={resident.id} alt={resident.name} />\n            <GridListTileBar\n              title={resident.name}\n              classes={{\n                root: classes.titleBar,\n                title: classes.title,\n              }}\n              actionIcon={\n                <IconButton aria-label={`star ${resident.name}`} >\n                  <AccountBoxIcon className={classes.icon}/>\n                </IconButton>\n              }\n            />\n          </GridListTile>\n        ))}\n      </GridList>\n    </div>\n  );\n}\n\nThumbnails.propTypes = {\n  availableResidents: PropTypes.array,\n  allResidents: PropTypes.array, \n  selectResident: PropTypes.object,\n  semesterAvailable: PropTypes.string,\n}\n\nexport default Thumbnails;","/Users/loladolinsky/Desktop/turing/projects/silver-nest/silver-nest/src/FindARoommate/FindARoommate.js",["53","54","55","56"],"import React, { useState, useEffect } from 'react';\nimport {getAllResidents, getResidentsBySemester} from '../apiCalls';\nimport Form from '../Form/Form';\nimport Thumbnails from '../Thumbnails/Thumbnails'\nimport ResidentCard from '../Profile/Profile';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport Container from '@material-ui/core/Container';\nimport { HelpOutline } from '@material-ui/icons';\n\nconst useStyles = makeStyles({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  form: {\n    marginTop:-20\n  },\n  text: {\n    color: \"#7c8181\"\n  },\n  box: {\n    paddingTop: 50, \n    paddingBottom: 80\n  }\n});\n\nexport default function FindARoomate() {\n  const classes = useStyles();\n\n  const [semester, setSemester] = useState('');\n  const [allResidents, setAllResidents] = useState([]);\n  const [availableResidents, setAvailableResidents] = useState([]);\n  const [selectedResident, setSelectedResident] = useState(null);\n  const [profile, setProfile] = useState(false);\n\n\n  useEffect(() => {\n  \n  }, [semester, availableResidents])\n\n  // const getResidents = async () => {\n  //   await getAllResidents()\n  //   .then(data => setAllResidents(data))\n  //   .catch(err => console.log(err))\n  // }\n\n  const selectSemester = (selectedSemester) => {\n    setSemester(selectedSemester)\n    getAvailableResidents(selectedSemester)\n  }\n\n  const getAvailableResidents = async (semester) => {\n    await getResidentsBySemester(semester)\n    .then(data => setAvailableResidents(data))\n    .catch(err => console.log(err))\n  }\n  \n  const selectResident = (resident) => {\n    setProfile(true)\n    setSelectedResident(resident)\n  }\n\n  const exitProfileView = (noResident) => {\n    setProfile(false)\n    setSelectedResident(noResident)\n\n  }\n\n  return (\n    <Container className={classes.root}>\n      {!profile?\n      <>\n      <Box className={classes.box}>\n        <h1 className={classes.text}>Select a semester:</h1>\n        <Form className={classes.form} selectSemester={selectSemester} />\n      </Box>\n      \n        <Thumbnails\n          availableResidents={availableResidents}\n          // allResidents={allResidents}\n          selectResident={selectResident}\n          semesterAvailable={semester}\n        />\n        </>\n      :\n        <ResidentCard \n          resident={selectedResident} \n          exitProfileView={exitProfileView} />\n      }\n    </Container>\n  );\n}","/Users/loladolinsky/Desktop/turing/projects/silver-nest/silver-nest/src/NavBar/NavBar.js",[],"/Users/loladolinsky/Desktop/turing/projects/silver-nest/silver-nest/src/Profile/Profile.js",["57","58"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Collapse from '@material-ui/core/Collapse';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport AccountBoxIcon from '@material-ui/icons/AccountBox';\nimport PropTypes from 'prop-types';\nimport CancelPresentationIcon from '@material-ui/icons/CancelPresentation';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    // maxWidth: 345,\n    marginTop: 60\n  },\n  media: {\n    height: 0,\n    paddingTop: '56.25%', // 16:9\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)',\n  },\n  cardText: {\n    align: 'left',\n    variant: \"h6\",\n    color: \"textSecondary\"\n  },\n  avatar: {\n    backgroundColor: '#00acc1',\n  },\n}));\n\nfunction ResidentCard({resident, exitProfileView}) {\n  const classes = useStyles();\n  const [expanded, setExpanded] = React.useState(false);\n  // const [close, setClose] = React.useState(false)\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n\n  const handleCloseClick = () => {\n    let noResident = '';\n    exitProfileView(noResident);\n  }\n\n  return (\n    <Card className={classes.root}>\n      <CardHeader\n        avatar={\n          <Avatar aria-label=\"resident\" className={classes.avatar}>\n            {resident.name[0]}\n          </Avatar>\n        }\n        action={\n          <IconButton aria-label=\"cancel\" onClick={() => {handleCloseClick()}}>\n            <CancelPresentationIcon />\n          </IconButton>\n        }\n        title={resident.name}\n        subheader={resident.semester}\n      />\n      <CardMedia\n        className={classes.media}\n        image={resident.photo}\n        title={`${resident.name}'s Photo`}\n      />\n\n      <CardContent>\n        <Typography variant=\"h6\" color=\"textSecondary\" gutterBottom>\n          Age:\n        </Typography>\n        <Typography paragraph>\n         {`${resident.age}`}\n        </Typography >\n        <Typography variant=\"h6\" color=\"textSecondary\" gutterBottom>\n          Interests:\n        </Typography>\n        <Typography paragraph>\n          {`${resident.interests}`}\n        </Typography>\n        <Typography variant=\"h6\" color=\"textSecondary\" gutterBottom>\n          Previous Career:\n        </Typography>\n        <Typography paragraph>\n          {`${resident.previous_career}`}\n        </Typography>\n        <Typography variant=\"h6\" color=\"textSecondary\" gutterBottom>\n          Pets:\n        </Typography>\n        <Typography paragraph>\n          {`${resident.pets}`}\n        </Typography>      \n        <Typography variant=\"h6\" color=\"textSecondary\" gutterBottom>\n          Living Preferences:\n        </Typography>      \n        <Typography paragraph>\n          {`${resident.living_preferences}`}\n        </Typography>     \n        <Typography variant=\"h6\" color=\"textSecondary\" gutterBottom>\n          Additional Notes:\n        </Typography>      \n        <Typography paragraph>\n          {`${resident.additional_notes}`}\n        </Typography>    \n      </CardContent>\n      <CardActions disableSpacing>\n        <IconButton aria-label=\"liked, application in process\">\n          <FavoriteIcon />\n        </IconButton>\n        <Button variant=\"outlined\" color=\"secondary\" aria-label=\"apply for housing\">\n              Apply for Housing\n        </Button>\n        {/* <IconButton aria-label=\"share\">\n          <ShareIcon />\n        </IconButton> */}\n        <IconButton\n          className={clsx(classes.expand, {\n            [classes.expandOpen]: expanded,\n          })}\n          onClick={handleExpandClick}\n          aria-expanded={expanded}\n          aria-label=\"show more\"\n        >\n          <ExpandMoreIcon />\n        </IconButton>\n      </CardActions>\n      <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n        <CardContent>\n          <Typography align='left' variant=\"h6\" color=\"textSecondary\">\n            Height: {`${resident.height}`}\n          </Typography>\n          <Typography align='left' variant=\"h6\" color=\"textSecondary\">\n            Weight: {`${resident.weight}`}\n          </Typography> \n          <Typography align='left' variant=\"h6\" color=\"textSecondary\">\n            PCP: {`${resident.pcp}`}\n          </Typography>\n          <Typography align='left' variant=\"h6\" color=\"textSecondary\">\n            Ambulatory: {`${resident.ambulatory}`}\n          </Typography>\n          <Typography align='left' variant=\"h6\" color=\"textSecondary\">\n            Help With Medications: {`${resident.help_with_medications}`}\n          </Typography>\n          <Typography align='left' variant=\"h6\" color=\"textSecondary\">\n            Other Impairments:{`${resident.other_impairments}`}\n          </Typography>\n        </CardContent>\n      </Collapse>\n    </Card>\n  );\n}\n\nResidentCard.propTypes = {\n  resident: PropTypes.object\n}\n\nexport default ResidentCard;","/Users/loladolinsky/Desktop/turing/projects/silver-nest/silver-nest/src/assets/tileData.js",[],"/Users/loladolinsky/Desktop/turing/projects/silver-nest/silver-nest/src/apiCalls.js",[],"/Users/loladolinsky/Desktop/turing/projects/silver-nest/silver-nest/src/Form/Form.js",[],{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":7,"column":8,"nodeType":"65","messageId":"66","endLine":7,"endColumn":22},{"ruleId":"63","severity":1,"message":"67","line":2,"column":9,"nodeType":"65","messageId":"66","endLine":2,"endColumn":24},{"ruleId":"63","severity":1,"message":"68","line":9,"column":10,"nodeType":"65","messageId":"66","endLine":9,"endColumn":21},{"ruleId":"63","severity":1,"message":"69","line":33,"column":10,"nodeType":"65","messageId":"66","endLine":33,"endColumn":22},{"ruleId":"63","severity":1,"message":"70","line":33,"column":24,"nodeType":"65","messageId":"66","endLine":33,"endColumn":39},{"ruleId":"63","severity":1,"message":"71","line":15,"column":8,"nodeType":"65","messageId":"66","endLine":15,"endColumn":20},{"ruleId":"63","severity":1,"message":"72","line":16,"column":8,"nodeType":"65","messageId":"66","endLine":16,"endColumn":22},"no-native-reassign",["73"],"no-negated-in-lhs",["74"],"no-unused-vars","'StarBorderIcon' is defined but never used.","Identifier","unusedVar","'getAllResidents' is defined but never used.","'HelpOutline' is defined but never used.","'allResidents' is assigned a value but never used.","'setAllResidents' is assigned a value but never used.","'MoreVertIcon' is defined but never used.","'AccountBoxIcon' is defined but never used.","no-global-assign","no-unsafe-negation"]